log-level: "info" # ["trace","debug","info","warn","error","fatal"]
log-db-queries: false

application-name: "social-danpalmer-me"
landing-page-user: "dan"

# DO NOT change this after your server has already run once, or you will break things!
host: "social.danpalmer.me"

# String. Domain to use when federating profiles. This is useful when you want your server to be at
# eg., "gts.example.org", but you want the domain on accounts to be "example.org" because it looks better
# or is just shorter/easier to remember.
#
# To make this setting work properly, you need to redirect requests at "example.org/.well-known/webfinger"
# to "gts.example.org/.well-known/webfinger" so that GtS can handle them properly.
#
# You should also redirect requests at "example.org/.well-known/nodeinfo" in the same way.
# An empty string (ie., not set) means that the same value as 'host' will be used.
#
# DO NOT change this after your server has already run once, or you will break things!
#
# Please read the appropriate section of the installation guide before you go messing around with this setting:
# https://docs.gotosocial.org/installation_guide/advanced/#can-i-host-my-instance-at-fediexampleorg-but-have-just-exampleorg-in-my-username
#
# Examples: ["example.org","server.com"]
# Default: ""
account-domain: "danpalmer.me"

protocol: "https"
bind-address: "0.0.0.0"
port: 8080
trusted-proxies:
  - "127.0.0.1/32"
  - "::1"

db-type: "postgres"
db-address: "social-danpalmer-me-db.internal"
db-port: 5432
db-user: "postgres"
db-password: "" # Set in $GTS_DB_PASSWORD
db-database: "social"
db-tls-mode: "disable"
db-tls-ca-cert: ""

instance-expose-peers: false
instance-expose-suspended: false
instance-expose-public-timeline: false
instance-deliver-to-shared-inboxes: true

accounts-registration-open: false
accounts-approval-required: true
accounts-reason-required: true
accounts-allow-custom-css: false

media-image-max-size: 10485760 # 10MB
media-video-max-size: 41943040 # 40MB
media-description-min-chars: 0
media-description-max-chars: 500
media-remote-cache-days: 30
media-emoji-local-max-size: 51200
media-emoji-remote-max-size: 102400 # 100KB

##########################
##### STORAGE CONFIG #####
##########################

# Config pertaining to storage of user-created uploads (videos, images, etc).

# String. Type of storage backend to use.
# Examples: ["local", "s3"]
# Default: "local" (storage on local disk)
storage-backend: "local"

# String. Directory to use as a base path for storing files.
# Make sure whatever user/group gotosocial is running as has permission to access
# this directory, and create new subdirectories and files within it.
# Only required when running with the local storage backend.
# Examples: ["/home/gotosocial/storage", "/opt/gotosocial/datastorage"]
# Default: "/gotosocial/storage"
storage-local-base-path: "/gotosocial/storage"

# String. API endpoint of the S3 compatible service.
# Only required when running with the s3 storage backend.
# Examples: ["minio:9000", "s3.nl-ams.scw.cloud", "s3.us-west-002.backblazeb2.com"]
# Default: ""
storage-s3-endpoint: ""

# Bool. If data stored in S3 should be proxied through GoToSocial instead of redirecting to a presigned URL.
#
# Default: false
storage-s3-proxy: false

# String. Access key part of the S3 credentials.
# Consider setting this value using environment variables to avoid leaking it via the config file
# Only required when running with the s3 storage backend.
# Examples: ["AKIAJSIE27KKMHXI3BJQ","miniouser"]
# Default: ""
storage-s3-access-key: ""
# String. Secret key part of the S3 credentials.
# Consider setting this value using environment variables to avoid leaking it via the config file
# Only required when running with the s3 storage backend.
# Examples: ["5bEYu26084qjSFyclM/f2pz4gviSfoOg+mFwBH39","miniopassword"]
# Default: ""
storage-s3-secret-key: ""
# String. Name of the storage bucket.
#
# If you have already encoded your bucket name in the storage-s3-endpoint, this
# value will be used as a directory containing your data.
#
# The bucket must exist prior to starting GoToSocial
#
# Only required when running with the s3 storage backend.
# Examples: ["gts","cool-instance"]
# Default: ""
storage-s3-bucket: ""

###########################
##### STATUSES CONFIG #####
###########################

statuses-max-chars: 5000
statuses-cw-max-chars: 100
statuses-poll-max-options: 6
statuses-poll-option-max-chars: 50
statuses-media-max-files: 6

letsencrypt-enabled: true
letsencrypt-port: 80
letsencrypt-cert-dir: "/gotosocial/storage/certs"
letsencrypt-email-address: ""

oidc-enabled: false
oidc-idp-name: ""
oidc-skip-verification: false
oidc-issuer: ""
oidc-client-id: ""
oidc-client-secret: ""
oidc-scopes:
  - "openid"
  - "email"
  - "profile"
  - "groups"
oidc-link-existing: false

smtp-host: "smtp.fastmail.com"
smtp-port: 465
smtp-username: "danpalmer@fastmail.fm"
smtp-password: "" # Set in $GTS_SMTP_PASSWORD
smtp-from: "social@danpalmer.me"

syslog-enabled: false
syslog-protocol: "udp"
syslog-address: "localhost:514"

advanced-cookies-samesite: "lax"
advanced-rate-limit-requests: 1000
